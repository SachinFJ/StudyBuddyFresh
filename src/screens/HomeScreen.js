import React, { useState, useEffect } from 'react';
import {
  View,
  Text,
  StyleSheet,
  ScrollView,
  TouchableOpacity,
  StatusBar,
  SafeAreaView,
  FlatList,
  Animated,
} from 'react-native';

/**
 * HomeScreen - StudyBuddy ‡§ê‡§™ ‡§ï‡§æ ‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§∏‡•ç‡§ï‡•ç‡§∞‡•Ä‡§®
 * @param {Object} navigation - ‡§®‡•á‡§µ‡§ø‡§ó‡•á‡§∂‡§® ‡§™‡•ç‡§∞‡•â‡§™ ‡§ú‡•ã ‡§∏‡•ç‡§ï‡•ç‡§∞‡•Ä‡§®‡•ç‡§∏ ‡§ï‡•á ‡§¨‡•Ä‡§ö ‡§®‡•á‡§µ‡§ø‡§ó‡•á‡§ü ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡•ã‡§§‡§æ ‡§π‡•à
 */
const HomeScreen = ({ navigation }) => {
  // ‡§°‡•á‡§Æ‡•ã ‡§∏‡•ç‡§ü‡•á‡§ü
  const [selectedBook, setSelectedBook] = useState(null);
  const [selectedTopic, setSelectedTopic] = useState(null);
  const [currentLanguage, setCurrentLanguage] = useState('hindi'); // 'hindi' or 'english'
  const [fadeAnim] = useState(new Animated.Value(0)); // ‡§è‡§®‡§ø‡§Æ‡•á‡§∂‡§® ‡§µ‡•à‡§≤‡•ç‡§Ø‡•Ç
  
  // ‡§è‡§®‡§ø‡§Æ‡•á‡§∂‡§® ‡§™‡•ç‡§∞‡§≠‡§æ‡§µ - ‡§∏‡•ç‡§ï‡•ç‡§∞‡•Ä‡§® ‡§™‡§∞ ‡§≤‡•ã‡§° ‡§π‡•ã‡§®‡•á ‡§™‡§∞
  useEffect(() => {
    Animated.timing(fadeAnim, {
      toValue: 1,
      duration: 800,
      useNativeDriver: true
    }).start();
  }, []);
  
  // ‡§°‡•á‡§Æ‡•ã ‡§°‡•á‡§ü‡§æ - ‡§¨‡§æ‡§¶ ‡§Æ‡•á‡§Ç API ‡§Ø‡§æ Redux ‡§∏‡•á ‡§Ü‡§è‡§ó‡§æ
  const bookList = [
    { id: 'book1', name: '‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø ‡§ú‡•ç‡§û‡§æ‡§®', color: '#FE7743', icon: 'üß†' },
    { id: 'book2', name: '‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§á‡§§‡§ø‡§π‡§æ‡§∏', color: '#3498DB', icon: 'üèõÔ∏è' },
    { id: 'book3', name: '‡§≠‡•Ç‡§ó‡•ã‡§≤', color: '#5B8C5A', icon: 'üåç' },
    { id: 'book4', name: '‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§®', color: '#9B59B6', icon: 'üî¨' },
  ];
  
  const topicList = [
    { id: 'topic1', name: '‡§á‡§§‡§ø‡§π‡§æ‡§∏', icon: 'üìú' },
    { id: 'topic2', name: '‡§≠‡•Ç‡§ó‡•ã‡§≤', icon: 'üåç' },
    { id: 'topic3', name: '‡§∞‡§æ‡§ú‡§®‡•Ä‡§§‡§ø', icon: '‚öñÔ∏è' },
    { id: 'topic4', name: '‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§®', icon: 'üî¨' },
    { id: 'topic5', name: '‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø ‡§ú‡•ç‡§û‡§æ‡§®', icon: 'üí°' },
  ];
  
  // ‡§≠‡§æ‡§∑‡§æ ‡§ü‡•â‡§ó‡§≤ ‡§π‡•à‡§Ç‡§°‡§≤‡§∞
  const toggleLanguage = () => {
    setCurrentLanguage(currentLanguage === 'hindi' ? 'english' : 'hindi');
  };

  // ‡§™‡•Å‡§∏‡•ç‡§§‡§ï ‡§ö‡§Ø‡§® ‡§π‡•à‡§Ç‡§°‡§≤‡§∞
  const handleSelectBook = (book) => {
    setSelectedBook(book);
    setSelectedTopic(null);
  };
  
  // ‡§ü‡•â‡§™‡§ø‡§ï ‡§ö‡§Ø‡§® ‡§π‡•à‡§Ç‡§°‡§≤‡§∞
  const handleSelectTopic = (topic) => {
    setSelectedTopic(topic);
  };
  
  // ‡§®‡•á‡§µ‡§ø‡§ó‡•á‡§∂‡§® ‡§π‡•à‡§Ç‡§°‡§≤‡§∞‡•ç‡§∏
  const navigateToQuiz = () => {
    // ‡§°‡•Ä‡§¨‡§ó ‡§ü‡•á‡§∏‡•ç‡§ü ‡§ï‡•á ‡§≤‡§ø‡§è - ‡§ï‡§Ç‡§∏‡•ã‡§≤ ‡§≤‡•â‡§ó
    console.log("Quiz screen ‡§™‡§∞ ‡§®‡•á‡§µ‡§ø‡§ó‡•á‡§ü ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç...");
    console.log("Selected Book:", selectedBook?.id);
    console.log("Selected Topic:", selectedTopic?.id);
    
    if (selectedBook && selectedTopic) {
      // ‡§™‡•à‡§∞‡§æ‡§Æ‡•Ä‡§ü‡§∞‡•ç‡§∏ ‡§ï‡•ã ‡§∏‡•ç‡§™‡§∑‡•ç‡§ü ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§™‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç
      navigation.navigate('Quiz', {
        bookId: selectedBook.id,
        topicId: selectedTopic.id,
      });
    } else {
      // ‡§Ö‡§ó‡§∞ ‡§¨‡•Å‡§ï ‡§Ø‡§æ ‡§ü‡•â‡§™‡§ø‡§ï ‡§®‡§π‡•Ä‡§Ç ‡§ö‡•Å‡§®‡•á ‡§ó‡§è ‡§π‡•à‡§Ç ‡§§‡•ã ‡§Ö‡§≤‡§∞‡•ç‡§ü ‡§¶‡§ø‡§ñ‡§æ‡§è
      alert('‡§ï‡•É‡§™‡§Ø‡§æ ‡§™‡§π‡§≤‡•á ‡§™‡•Å‡§∏‡•ç‡§§‡§ï ‡§î‡§∞ ‡§µ‡§ø‡§∑‡§Ø ‡§ö‡•Å‡§®‡•á‡§Ç');
    }
  };
  
  const navigateToOneliner = () => {
    if (selectedBook && selectedTopic) {
      navigation.navigate('Oneliner', {
        bookId: selectedBook.id,
        topicId: selectedTopic.id,
      });
    } else {
      // ‡§Ö‡§ó‡§∞ ‡§¨‡•Å‡§ï ‡§Ø‡§æ ‡§ü‡•â‡§™‡§ø‡§ï ‡§®‡§π‡•Ä‡§Ç ‡§ö‡•Å‡§®‡•á ‡§ó‡§è ‡§π‡•à‡§Ç ‡§§‡•ã ‡§Ö‡§≤‡§∞‡•ç‡§ü ‡§¶‡§ø‡§ñ‡§æ‡§è
      alert('‡§ï‡•É‡§™‡§Ø‡§æ ‡§™‡§π‡§≤‡•á ‡§™‡•Å‡§∏‡•ç‡§§‡§ï ‡§î‡§∞ ‡§µ‡§ø‡§∑‡§Ø ‡§ö‡•Å‡§®‡•á‡§Ç');
    }
  };
  
  const navigateToMiscQuestions = () => {
    navigation.navigate('MiscQuestions');
  };
  
  const navigateToSuggestBook = () => {
    navigation.navigate('SuggestBook');
  };
  
  // ‡§™‡•Å‡§∏‡•ç‡§§‡§ï ‡§ï‡§æ‡§∞‡•ç‡§° ‡§∞‡•á‡§Ç‡§°‡§∞
  const renderBookItem = ({ item, index }) => {
    // ‡§ï‡§æ‡§∞‡•ç‡§° ‡§è‡§®‡§ø‡§Æ‡•á‡§∂‡§® ‡§≤‡§ó‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§•‡•ã‡§°‡§º‡•Ä ‡§¶‡•á‡§∞‡•Ä
    const delay = index * 100;
    
    return (
      <Animated.View
        style={{
          opacity: fadeAnim,
          transform: [
            {
              translateY: fadeAnim.interpolate({
                inputRange: [0, 1],
                outputRange: [20, 0]
              })
            }
          ]
        }}
      >
        <TouchableOpacity
          style={[
            styles.bookCard,
            { backgroundColor: item.color },
            selectedBook?.id === item.id && styles.selectedBookCard
          ]}
          onPress={() => handleSelectBook(item)}
          activeOpacity={0.8}
        >
          <Text style={styles.bookCardIcon}>{item.icon}</Text>
          <Text style={styles.bookCardText}>{item.name}</Text>
        </TouchableOpacity>
      </Animated.View>
    );
  };

  return (
    <SafeAreaView style={styles.container}>
      <StatusBar backgroundColor="#FE7743" barStyle="light-content" />
      
      {/* ‡§π‡•á‡§°‡§∞ - ‡§∏‡§æ‡§ß‡§æ‡§∞‡§£ ‡§µ‡•ç‡§Ø‡•Ç ‡§ï‡•á ‡§∏‡§æ‡§• */}
      <View style={styles.header}>
        <Text style={styles.headerTitle}>StudyBuddy</Text>
        <TouchableOpacity style={styles.langButton} onPress={toggleLanguage}>
          <Text style={styles.langButtonText}>
            {currentLanguage === 'hindi' ? 'EN' : '‡§π‡§ø‡§Ç'}
          </Text>
        </TouchableOpacity>
      </View>
      
      <ScrollView style={styles.scrollView} showsVerticalScrollIndicator={false}>
        {/* ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§∏‡§Ç‡§¶‡•á‡§∂ */}
        <Animated.View 
          style={[
            styles.welcome,
            {
              opacity: fadeAnim,
              transform: [{
                translateY: fadeAnim.interpolate({
                  inputRange: [0, 1],
                  outputRange: [30, 0]
                })
              }]
            }
          ]}
        >
          <Text style={styles.welcomeTitle}>
            {currentLanguage === 'hindi' ? '‡§®‡§Æ‡§∏‡•ç‡§§‡•á!' : 'Hello!'}
          </Text>
          <Text style={styles.welcomeText}>
            {currentLanguage === 'hindi' 
              ? '‡§Ü‡§ú ‡§Ü‡§™ ‡§ï‡•ç‡§Ø‡§æ ‡§∏‡•Ä‡§ñ‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?' 
              : 'What would you like to learn today?'}
          </Text>
        </Animated.View>
        
        {/* ‡§™‡•Å‡§∏‡•ç‡§§‡§ï ‡§ö‡•Å‡§®‡•á‡§Ç */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>
            {currentLanguage === 'hindi' ? '‡§™‡•Å‡§∏‡•ç‡§§‡§ï ‡§ö‡•Å‡§®‡•á‡§Ç' : 'Select Book'}
          </Text>
          
          <FlatList
            data={bookList}
            renderItem={renderBookItem}
            keyExtractor={item => item.id}
            horizontal
            showsHorizontalScrollIndicator={false}
            contentContainerStyle={styles.bookList}
          />
        </View>
        
        {/* ‡§ü‡•â‡§™‡§ø‡§ï ‡§ö‡•Å‡§®‡•á‡§Ç - ‡§ï‡•á‡§µ‡§≤ ‡§§‡§≠‡•Ä ‡§¶‡§ø‡§ñ‡§æ‡§è‡§Ç ‡§ú‡§¨ ‡§™‡•Å‡§∏‡•ç‡§§‡§ï ‡§ö‡•Å‡§®‡•Ä ‡§ó‡§à ‡§π‡•ã */}
        {selectedBook && (
          <Animated.View 
            style={[
              styles.section,
              {
                opacity: fadeAnim,
                transform: [{
                  translateY: fadeAnim.interpolate({
                    inputRange: [0, 1],
                    outputRange: [20, 0]
                  })
                }]
              }
            ]}
          >
            <Text style={styles.sectionTitle}>
              {currentLanguage === 'hindi' ? '‡§µ‡§ø‡§∑‡§Ø ‡§ö‡•Å‡§®‡•á‡§Ç' : 'Select Topic'}
            </Text>
            
            <View style={styles.topicList}>
              {topicList.map((topic, index) => (
                <TouchableOpacity
                  key={topic.id}
                  style={[
                    styles.topicButton,
                    selectedTopic?.id === topic.id && styles.selectedTopicButton
                  ]}
                  onPress={() => handleSelectTopic(topic)}
                >
                  <Text style={styles.topicIcon}>{topic.icon}</Text>
                  <Text 
                    style={[
                      styles.topicText,
                      selectedTopic?.id === topic.id && styles.selectedTopicText
                    ]}
                  >
                    {topic.name}
                  </Text>
                </TouchableOpacity>
              ))}
            </View>
          </Animated.View>
        )}
        
        {/* ‡§Ö‡§ß‡•ç‡§Ø‡§Ø‡§® ‡§Æ‡•ã‡§° */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>
            {currentLanguage === 'hindi' ? '‡§Ö‡§ß‡•ç‡§Ø‡§Ø‡§® ‡§Æ‡•ã‡§°' : 'Study Mode'}
          </Text>
          
          {/* ‡§ï‡•ç‡§µ‡§ø‡§ú‡§º ‡§Æ‡•ã‡§° */}
          <TouchableOpacity
            style={[
              styles.modeCard,
              styles.quizCard,
              (!selectedBook || !selectedTopic) && styles.disabledCard
            ]}
            onPress={navigateToQuiz}
            disabled={!selectedBook || !selectedTopic}
          >
            <View style={styles.modeCardIcon}>
              <Text style={styles.modeCardIconText}>üìù</Text>
            </View>
            <View style={styles.modeCardContent}>
              <Text style={styles.modeCardTitle}>
                {currentLanguage === 'hindi' ? '‡§ï‡•ç‡§µ‡§ø‡§ú‡§º' : 'Quiz'}
              </Text>
              <Text style={styles.modeCardDesc}>
                {currentLanguage === 'hindi' 
                  ? '‡§á‡§Ç‡§ü‡§∞‡•à‡§ï‡•ç‡§ü‡§ø‡§µ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä ‡§ï‡§æ ‡§Ö‡§≠‡•ç‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç' 
                  : 'Practice with interactive quizzes'}
              </Text>
            </View>
            <Text style={styles.modeCardArrow}>‚Üí</Text>
          </TouchableOpacity>
          
          {/* ‡§µ‡§®‡§≤‡§æ‡§á‡§®‡§∞ ‡§Æ‡•ã‡§° */}
          <TouchableOpacity
            style={[
              styles.modeCard,
              styles.onelinerCard,
              (!selectedBook || !selectedTopic) && styles.disabledCard
            ]}
            onPress={navigateToOneliner}
            disabled={!selectedBook || !selectedTopic}
          >
            <View style={styles.modeCardIcon}>
              <Text style={styles.modeCardIconText}>üìö</Text>
            </View>
            <View style={styles.modeCardContent}>
              <Text style={styles.modeCardTitle}>
                {currentLanguage === 'hindi' ? '‡§µ‡§®‡§≤‡§æ‡§á‡§®‡§∞' : 'Oneliner'}
              </Text>
              <Text style={styles.modeCardDesc}>
                {currentLanguage === 'hindi' 
                  ? '‡§è‡§ï-‡§™‡§Ç‡§ï‡•ç‡§§‡§ø ‡§∏‡§æ‡§∞ ‡§™‡§¢‡§º‡•á‡§Ç ‡§î‡§∞ ‡§Ø‡§æ‡§¶ ‡§ï‡§∞‡•á‡§Ç' 
                  : 'Read and memorize one-line summaries'}
              </Text>
            </View>
            <Text style={styles.modeCardArrow}>‚Üí</Text>
          </TouchableOpacity>
          
          {/* ‡§Æ‡§ø‡§∂‡•ç‡§∞‡§ø‡§§ ‡§™‡•ç‡§∞‡§∂‡•ç‡§® ‡§Æ‡•ã‡§° */}
          <TouchableOpacity
            style={[styles.modeCard, styles.miscCard]}
            onPress={navigateToMiscQuestions}
          >
            <View style={styles.modeCardIcon}>
              <Text style={styles.modeCardIconText}>üîÑ</Text>
            </View>
            <View style={styles.modeCardContent}>
              <Text style={styles.modeCardTitle}>
                {currentLanguage === 'hindi' ? '‡§Æ‡§ø‡§∂‡•ç‡§∞‡§ø‡§§ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®' : 'Mixed Questions'}
              </Text>
              <Text style={styles.modeCardDesc}>
                {currentLanguage === 'hindi' 
                  ? '‡§∏‡§≠‡•Ä ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§Ç ‡§ï‡§æ ‡§∞‡•à‡§Ç‡§°‡§Æ ‡§è‡§ï‡•ç‡§∏‡•á‡§∏' 
                  : 'Random access to all questions'}
              </Text>
            </View>
            <Text style={styles.modeCardArrow}>‚Üí</Text>
          </TouchableOpacity>
        </View>
        
        {/* ‡§™‡•ç‡§∞‡§ó‡§§‡§ø - ‡§Ö‡§ß‡§ø‡§ï ‡§Ü‡§ï‡§∞‡•ç‡§∑‡§ï ‡§°‡§ø‡§ú‡§º‡§æ‡§á‡§® ‡§ï‡•á ‡§∏‡§æ‡§• */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>
            {currentLanguage === 'hindi' ? '‡§Ü‡§™‡§ï‡•Ä ‡§™‡•ç‡§∞‡§ó‡§§‡§ø' : 'Your Progress'}
          </Text>
          
          <View style={styles.progressCard}>
            <View style={styles.progressHeader}>
              <Text style={styles.progressTitle}>
                {currentLanguage === 'hindi' ? '‡§∏‡§Æ‡§ó‡•ç‡§∞ ‡§™‡•ç‡§∞‡§ó‡§§‡§ø' : 'Overall Progress'}
              </Text>
              <Text style={styles.progressPercent}>35%</Text>
            </View>
            
            <View style={styles.progressBarContainer}>
              <View style={[styles.progressBar, { width: '35%' }]} />
            </View>
            
            <View style={styles.statsContainer}>
              <View style={styles.statItem}>
                <View style={styles.statBubble}>
                  <Text style={styles.statNumber}>98</Text>
                </View>
                <Text style={styles.statLabel}>
                  {currentLanguage === 'hindi' ? '‡§™‡•ç‡§∞‡§∂‡•ç‡§® ‡§π‡§≤ ‡§ï‡§ø‡§è' : 'Questions Solved'}
                </Text>
              </View>
              <View style={styles.statItem}>
                <View style={styles.statBubble}>
                  <Text style={styles.statNumber}>8</Text>
                </View>
                <Text style={styles.statLabel}>
                  {currentLanguage === 'hindi' ? '‡§µ‡§ø‡§∑‡§Ø ‡§ï‡§µ‡§∞ ‡§ï‡§ø‡§è' : 'Topics Covered'}
                </Text>
              </View>
              <View style={styles.statItem}>
                <View style={styles.statBubble}>
                  <Text style={styles.statNumber}>7.2</Text>
                </View>
                <Text style={styles.statLabel}>
                  {currentLanguage === 'hindi' ? '‡§î‡§∏‡§§ ‡§∏‡•ç‡§ï‡•ã‡§∞' : 'Avg. Score'}
                </Text>
              </View>
            </View>
          </View>
        </View>
        
        {/* ‡§®‡§à ‡§™‡•Å‡§∏‡•ç‡§§‡§ï ‡§∏‡•Å‡§ù‡§æ‡§µ - ‡§Ö‡§¨ ‡§®‡•á‡§µ‡§ø‡§ó‡•á‡§∂‡§® ‡§ï‡•á ‡§∏‡§æ‡§• */}
        <View style={styles.suggestContainer}>
          <TouchableOpacity 
            style={styles.suggestButton}
            onPress={navigateToSuggestBook}
          >
            <Text style={styles.suggestIcon}>üìö</Text>
            <Text style={styles.suggestText}>
              {currentLanguage === 'hindi' ? '‡§®‡§à ‡§™‡•Å‡§∏‡•ç‡§§‡§ï ‡§∏‡•Å‡§ù‡§æ‡§è‡§Ç' : 'Suggest a New Book'}
            </Text>
          </TouchableOpacity>
        </View>
        
        {/* ‡§´‡•Å‡§ü‡§∞ */}
        <View style={styles.footer}>
          <Text style={styles.footerText}>
            StudyBuddy ¬© {new Date().getFullYear()}
          </Text>
        </View>
      </ScrollView>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#EFEEEA',
  },
  header: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    backgroundColor: '#FE7743',
    paddingHorizontal: 20,
    paddingVertical: 15,
  },
  headerTitle: {
    fontSize: 22,
    fontWeight: 'bold',
    color: '#FFFFFF',
    letterSpacing: 0.5,
  },
  langButton: {
    backgroundColor: 'rgba(255,255,255,0.3)',
    paddingHorizontal: 12,
    paddingVertical: 6,
    borderRadius: 20,
    elevation: 2,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.2,
    shadowRadius: 1.5,
  },
  langButtonText: {
    color: '#FFFFFF',
    fontWeight: 'bold',
  },
  scrollView: {
    flex: 1,
  },
  welcome: {
    padding: 20,
    paddingTop: 25,
  },
  welcomeTitle: {
    fontSize: 28,
    fontWeight: 'bold',
    color: '#273F4F',
    marginBottom: 5,
  },
  welcomeText: {
    fontSize: 16,
    color: '#666666',
  },
  section: {
    marginBottom: 25,
  },
  sectionTitle: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#273F4F',
    marginBottom: 15,
    paddingHorizontal: 20,
  },
  bookList: {
    paddingLeft: 20,
    paddingRight: 10,
  },
  bookCard: {
    width: 160,
    height: 100,
    borderRadius: 16,
    marginRight: 12,
    padding: 15,
    justifyContent: 'center',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 3 },
    shadowOpacity: 0.2,
    shadowRadius: 5,
    elevation: 6,
  },
  selectedBookCard: {
    borderWidth: 3,
    borderColor: '#FFFFFF',
  },
  bookCardIcon: {
    fontSize: 24,
    marginBottom: 8,
    color: '#FFFFFF',
  },
  bookCardText: {
    color: '#FFFFFF',
    fontSize: 18,
    fontWeight: 'bold',
  },
  topicList: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    paddingHorizontal: 15,
  },
  topicButton: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#FFFFFF',
    paddingHorizontal: 16,
    paddingVertical: 12,
    borderRadius: 25,
    marginHorizontal: 5,
    marginBottom: 10,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 3,
    elevation: 2,
  },
  selectedTopicButton: {
    backgroundColor: '#FE7743',
    elevation: 4,
  },
  topicIcon: {
    fontSize: 18,
    marginRight: 8,
  },
  topicText: {
    color: '#273F4F',
    fontSize: 15,
    fontWeight: '500',
  },
  selectedTopicText: {
    color: '#FFFFFF',
    fontWeight: 'bold',
  },
  modeCard: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#FFFFFF',
    marginHorizontal: 20,
    marginBottom: 12,
    borderRadius: 16,
    padding: 18,
    borderLeftWidth: 5,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 3 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 4,
  },
  quizCard: {
    borderLeftColor: '#FE7743',
  },
  onelinerCard: {
    borderLeftColor: '#273F4F',
  },
  miscCard: {
    borderLeftColor: '#5B8C5A',
  },
  disabledCard: {
    opacity: 0.5,
  },
  modeCardIcon: {
    width: 46,
    height: 46,
    borderRadius: 23,
    backgroundColor: 'rgba(254, 119, 67, 0.1)',
    justifyContent: 'center',
    alignItems: 'center',
    marginRight: 15,
    elevation: 2,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.2,
    shadowRadius: 1.5,
  },
  modeCardIconText: {
    fontSize: 22,
  },
  modeCardContent: {
    flex: 1,
  },
  modeCardTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#273F4F',
    marginBottom: 4,
  },
  modeCardDesc: {
    fontSize: 13,
    color: '#666666',
  },
  modeCardArrow: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#FE7743',
  },
  progressCard: {
    backgroundColor: '#FFFFFF',
    marginHorizontal: 20,
    borderRadius: 16,
    padding: 20,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 3 },
    shadowOpacity: 0.15,
    shadowRadius: 5,
    elevation: 5,
  },
  progressHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 15,
  },
  progressTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#273F4F',
  },
  progressPercent: {
    fontSize: 22,
    fontWeight: 'bold',
    color: '#FE7743',
  },
  progressBarContainer: {
    height: 10,
    backgroundColor: '#F0F0F0',
    borderRadius: 5,
    marginBottom: 20,
  },
  progressBar: {
    height: '100%',
    backgroundColor: '#FE7743',
    borderRadius: 5,
  },
  statsContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    paddingTop: 15,
    borderTopWidth: 1,
    borderTopColor: '#F0F0F0',
  },
  statItem: {
    flex: 1,
    alignItems: 'center',
  },
  statBubble: {
    width: 50,
    height: 50,
    borderRadius: 25,
    backgroundColor: 'rgba(254, 119, 67, 0.1)',
    justifyContent: 'center',
    alignItems: 'center',
    marginBottom: 8,
  },
  statNumber: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#273F4F',
  },
  statLabel: {
    fontSize: 12,
    color: '#666666',
    textAlign: 'center',
  },
  suggestContainer: {
    paddingHorizontal: 20,
    marginBottom: 30,
  },
  suggestButton: {
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center',
    padding: 18,
    backgroundColor: '#FFFFFF',
    borderRadius: 16,
    borderWidth: 1.5,
    borderColor: '#273F4F',
    borderStyle: 'dashed',
    elevation: 2,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 3,
  },
  suggestIcon: {
    fontSize: 20,
    marginRight: 10,
  },
  suggestText: {
    color: '#273F4F',
    fontWeight: '500',
    fontSize: 16,
  },
  footer: {
    alignItems: 'center',
    marginBottom: 20,
  },
  footerText: {
    fontSize: 12,
    color: '#999999',
  },
});

export default HomeScreen;