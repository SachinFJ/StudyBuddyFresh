import React, { useState } from 'react';
import {
  View,
  Text,
  StyleSheet,
  TouchableOpacity,
  StatusBar,
  ScrollView,
  FlatList,
  SafeAreaView,
} from 'react-native';

const HomeScreen = ({ navigation }) => {
  // ‡§∏‡•ç‡§ü‡•á‡§ü ‡§µ‡•á‡§∞‡§ø‡§è‡§¨‡§≤‡•ç‡§∏
  const [currentLanguage, setCurrentLanguage] = useState('hindi');
  const [selectedBook, setSelectedBook] = useState(null);
  const [selectedSubject, setSelectedSubject] = useState(null);
  const [selectedTopic, setSelectedTopic] = useState(null);
  
  // ‡§°‡•á‡§Æ‡•ã ‡§°‡•á‡§ü‡§æ
  const bookList = [
    { id: 'book1', name: '‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø ‡§ú‡•ç‡§û‡§æ‡§®', color: '#003049', icon: 'üß†' },
    { id: 'book2', name: '‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§á‡§§‡§ø‡§π‡§æ‡§∏', color: '#C1121F', icon: 'üèõÔ∏è' },
    { id: 'book3', name: '‡§≠‡•Ç‡§ó‡•ã‡§≤', color: '#669BBC', icon: 'üåç' },
    { id: 'book4', name: '‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§®', color: '#780000', icon: 'üî¨' },
  ];
  
  const subjectList = [
    { id: 'subject1', bookId: 'book1', name: '‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Ø', icon: 'üèÜ' },
    { id: 'subject2', bookId: 'book1', name: '‡§Ö‡§Ç‡§§‡§∞‡•ç‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Ø', icon: 'üåê' },
    { id: 'subject3', bookId: 'book2', name: '‡§™‡•ç‡§∞‡§æ‡§ö‡•Ä‡§® ‡§ï‡§æ‡§≤', icon: 'üóø' },
    { id: 'subject4', bookId: 'book3', name: '‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§≠‡•Ç‡§ó‡•ã‡§≤', icon: 'üó∫Ô∏è' },
    { id: 'subject5', bookId: 'book4', name: '‡§≠‡•å‡§§‡§ø‡§ï ‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§®', icon: '‚öõÔ∏è' },
  ];
  
  const topicList = [
    { id: 'topic1', subjectId: 'subject1', name: '‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Ø ‡§™‡•ç‡§∞‡§§‡•Ä‡§ï', icon: 'üèõÔ∏è' },
    { id: 'topic2', subjectId: 'subject1', name: '‡§∏‡§Ç‡§µ‡§ø‡§ß‡§æ‡§®', icon: 'üìú' },
    { id: 'topic3', subjectId: 'subject2', name: '‡§∏‡§Ç‡§Ø‡•Å‡§ï‡•ç‡§§ ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞', icon: 'üá∫üá≥' },
    { id: 'topic4', subjectId: 'subject3', name: '‡§∏‡§ø‡§Ç‡§ß‡•Å ‡§ò‡§æ‡§ü‡•Ä ‡§∏‡§≠‡•ç‡§Ø‡§§‡§æ', icon: 'üè∫' },
  ];
  
  // ‡§´‡§ø‡§≤‡•ç‡§ü‡§∞ ‡§´‡§Ç‡§ï‡•ç‡§∂‡§®‡•ç‡§∏
  const getFilteredSubjects = () => {
    if (!selectedBook) return [];
    return subjectList.filter(subject => subject.bookId === selectedBook.id);
  };
  
  const getFilteredTopics = () => {
    if (!selectedSubject) return [];
    return topicList.filter(topic => topic.subjectId === selectedSubject.id);
  };
  
  // ‡§π‡•à‡§Ç‡§°‡§≤‡§∞‡•ç‡§∏
  const handleBookSelect = (book) => {
    setSelectedBook(book);
    setSelectedSubject(null);
    setSelectedTopic(null);
  };
  
  const handleSubjectSelect = (subject) => {
    setSelectedSubject(subject);
    setSelectedTopic(null);
  };
  
  const handleTopicSelect = (topic) => {
    setSelectedTopic(topic);
  };
  
  const handleAllTopicsSelect = () => {
    setSelectedTopic(null);
  };
  
  const toggleLanguage = () => {
    setCurrentLanguage(prev => prev === 'hindi' ? 'english' : 'hindi');
  };
  
  // ‡§®‡•á‡§µ‡§ø‡§ó‡•á‡§∂‡§® ‡§π‡•à‡§Ç‡§°‡§≤‡§∞‡•ç‡§∏
  const navigateToQuiz = () => {
    if (!selectedBook || !selectedSubject) return;
    
    navigation.navigate('Quiz', {
      bookId: selectedBook.id,
      bookName: selectedBook.name,
      subjectId: selectedSubject.id,
      subjectName: selectedSubject.name,
      topicId: selectedTopic?.id,
      topicName: selectedTopic?.name,
    });
  };
  
  const navigateToOneliner = () => {
    if (!selectedBook || !selectedSubject) return;
    
    navigation.navigate('Oneliner', {
      bookId: selectedBook.id,
      bookName: selectedBook.name,
      subjectId: selectedSubject.id,
      subjectName: selectedSubject.name,
      topicId: selectedTopic?.id,
      topicName: selectedTopic?.name,
    });
  };
  
  const navigateToMiscQuestions = () => {
    navigation.navigate('MiscQuestions');
  };

  return (
    <SafeAreaView style={styles.container}>
      <StatusBar backgroundColor="#003049" barStyle="light-content" />
      
      {/* ‡§π‡•á‡§°‡§∞ */}
      <View style={styles.header}>
        <Text style={styles.headerTitle}>StudyBuddy</Text>
        <TouchableOpacity 
          style={styles.langButton}
          onPress={toggleLanguage}
        >
          <Text style={styles.langButtonText}>
            {currentLanguage === 'hindi' ? 'ENG' : '‡§π‡§ø‡§Ç'}
          </Text>
        </TouchableOpacity>
      </View>
      
      <ScrollView style={styles.scrollView}>
        {/* ‡§™‡•Å‡§∏‡•ç‡§§‡§ï ‡§µ‡§æ‡§≤‡§æ ‡§ï‡§æ‡§∞‡•ç‡§° */}
        <View style={styles.card}>
          <Text style={styles.cardTitle}>
            {currentLanguage === 'hindi' ? '1. ‡§™‡•Å‡§∏‡•ç‡§§‡§ï ‡§ö‡•Å‡§®‡•á‡§Ç' : '1. Select Book'}
          </Text>
          
          <FlatList
            data={bookList}
            horizontal
            showsHorizontalScrollIndicator={false}
            keyExtractor={item => item.id}
            renderItem={({ item }) => (
              <TouchableOpacity
                style={[
                  styles.bookItem,
                  { backgroundColor: item.color },
                  selectedBook?.id === item.id && styles.selectedItem
                ]}
                onPress={() => handleBookSelect(item)}
              >
                <Text style={styles.bookItemIcon}>{item.icon}</Text>
                <Text style={styles.bookItemText}>{item.name}</Text>
              </TouchableOpacity>
            )}
            contentContainerStyle={styles.bookList}
          />
        </View>
        
        {/* ‡§µ‡§ø‡§∑‡§Ø ‡§µ‡§æ‡§≤‡§æ ‡§ï‡§æ‡§∞‡•ç‡§° */}
        <View style={[
          styles.card,
          !selectedBook && styles.disabledCard
        ]}>
          <Text style={styles.cardTitle}>
            {currentLanguage === 'hindi' ? '2. ‡§µ‡§ø‡§∑‡§Ø ‡§ö‡•Å‡§®‡•á‡§Ç' : '2. Select Subject'}
          </Text>
          
          {selectedBook ? (
            <FlatList
              data={getFilteredSubjects()}
              horizontal
              showsHorizontalScrollIndicator={false}
              keyExtractor={item => item.id}
              renderItem={({ item }) => (
                <TouchableOpacity
                  style={[
                    styles.subjectItem,
                    selectedSubject?.id === item.id && styles.selectedSubjectItem
                  ]}
                  onPress={() => handleSubjectSelect(item)}
                >
                  <Text style={styles.subjectItemIcon}>{item.icon}</Text>
                  <Text style={styles.subjectItemText}>{item.name}</Text>
                </TouchableOpacity>
              )}
              contentContainerStyle={styles.subjectList}
            />
          ) : (
            <Text style={styles.emptyMessage}>
              {currentLanguage === 'hindi' 
                ? '‡§™‡§π‡§≤‡•á ‡§™‡•Å‡§∏‡•ç‡§§‡§ï ‡§ö‡•Å‡§®‡•á‡§Ç' 
                : 'Please select a book first'}
            </Text>
          )}
        </View>
        
        {/* ‡§ü‡•â‡§™‡§ø‡§ï ‡§µ‡§æ‡§≤‡§æ ‡§ï‡§æ‡§∞‡•ç‡§° (‡§µ‡•à‡§ï‡§≤‡•ç‡§™‡§ø‡§ï) */}
        <View style={[
          styles.card,
          !selectedSubject && styles.disabledCard
        ]}>
          <Text style={styles.cardTitle}>
            {currentLanguage === 'hindi' ? '3. ‡§ü‡•â‡§™‡§ø‡§ï ‡§ö‡•Å‡§®‡•á‡§Ç (‡§µ‡•à‡§ï‡§≤‡•ç‡§™‡§ø‡§ï)' : '3. Select Topic (Optional)'}
          </Text>
          
          {selectedSubject ? (
            <>
              <TouchableOpacity
                style={[
                  styles.allTopicsButton,
                  !selectedTopic && styles.selectedTopicItem
                ]}
                onPress={handleAllTopicsSelect}
              >
                <Text style={styles.allTopicsIcon}>üìö</Text>
                <Text style={styles.allTopicsText}>
                  {currentLanguage === 'hindi' ? '‡§∏‡§≠‡•Ä ‡§ü‡•â‡§™‡§ø‡§ï‡•ç‡§∏' : 'All Topics'}
                </Text>
              </TouchableOpacity>
              
              <FlatList
                data={getFilteredTopics()}
                horizontal
                showsHorizontalScrollIndicator={false}
                keyExtractor={item => item.id}
                renderItem={({ item }) => (
                  <TouchableOpacity
                    style={[
                      styles.topicItem,
                      selectedTopic?.id === item.id && styles.selectedTopicItem
                    ]}
                    onPress={() => handleTopicSelect(item)}
                  >
                    <Text style={styles.topicItemIcon}>{item.icon}</Text>
                    <Text style={styles.topicItemText}>{item.name}</Text>
                  </TouchableOpacity>
                )}
                contentContainerStyle={styles.topicList}
              />
            </>
          ) : (
            <Text style={styles.emptyMessage}>
              {currentLanguage === 'hindi' 
                ? '‡§™‡§π‡§≤‡•á ‡§µ‡§ø‡§∑‡§Ø ‡§ö‡•Å‡§®‡•á‡§Ç' 
                : 'Please select a subject first'}
            </Text>
          )}
        </View>
        
        {/* ‡§Ö‡§ß‡•ç‡§Ø‡§Ø‡§® ‡§Æ‡•ã‡§° ‡§ï‡§æ‡§∞‡•ç‡§° */}
        <View style={styles.card}>
          <Text style={styles.cardTitle}>
            {currentLanguage === 'hindi' ? '4. ‡§Ö‡§ß‡•ç‡§Ø‡§Ø‡§® ‡§Æ‡•ã‡§° ‡§ö‡•Å‡§®‡•á‡§Ç' : '4. Select Study Mode'}
          </Text>
          
          {selectedBook && selectedSubject ? (
            <View style={styles.studyModeContainer}>
              <TouchableOpacity
                style={styles.studyModeButton}
                onPress={navigateToQuiz}
              >
                <Text style={styles.studyModeIcon}>üìù</Text>
                <Text style={styles.studyModeText}>
                  {currentLanguage === 'hindi' ? '‡§ï‡•ç‡§µ‡§ø‡§ú‡§º' : 'Quiz'}
                </Text>
              </TouchableOpacity>
              
              <TouchableOpacity
                style={styles.studyModeButton}
                onPress={navigateToOneliner}
              >
                <Text style={styles.studyModeIcon}>üìö</Text>
                <Text style={styles.studyModeText}>
                  {currentLanguage === 'hindi' ? '‡§µ‡§®‡§≤‡§æ‡§á‡§®‡§∞' : 'Oneliner'}
                </Text>
              </TouchableOpacity>
            </View>
          ) : (
            <Text style={styles.emptyMessage}>
              {currentLanguage === 'hindi' 
                ? '‡§™‡§π‡§≤‡•á ‡§™‡•Å‡§∏‡•ç‡§§‡§ï ‡§î‡§∞ ‡§µ‡§ø‡§∑‡§Ø ‡§ö‡•Å‡§®‡•á‡§Ç' 
                : 'Please select a book and subject first'}
            </Text>
          )}
        </View>
        
        {/* ‡§Æ‡§ø‡§∂‡•ç‡§∞‡§ø‡§§ ‡§™‡•ç‡§∞‡§∂‡•ç‡§® ‡§ï‡§æ‡§∞‡•ç‡§° */}
        <View style={styles.miscCard}>
          <Text style={styles.miscCardTitle}>
            {currentLanguage === 'hindi' ? '‡§Ø‡§æ ‡§´‡§ø‡§∞ ‡§∏‡•Ä‡§ß‡•á' : 'Or Directly'}
          </Text>
          
          <TouchableOpacity
            style={styles.miscButton}
            onPress={navigateToMiscQuestions}
          >
            <Text style={styles.miscButtonIcon}>üîÑ</Text>
            <Text style={styles.miscButtonText}>
              {currentLanguage === 'hindi' ? '‡§Æ‡§ø‡§∂‡•ç‡§∞‡§ø‡§§ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®' : 'Mixed Questions'}
            </Text>
          </TouchableOpacity>
          
          <Text style={styles.miscDescription}>
            {currentLanguage === 'hindi' 
              ? '‡§¨‡§ø‡§®‡§æ ‡§ï‡§ø‡§∏‡•Ä ‡§ö‡§Ø‡§® ‡§ï‡•á ‡§∏‡§≠‡•Ä ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§Ç ‡§ï‡§æ ‡§Ö‡§≠‡•ç‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç' 
              : 'Practice all questions without any selection'}
          </Text>
        </View>
        
        {/* ‡§ö‡§Ø‡§® ‡§∏‡§æ‡§∞‡§æ‡§Ç‡§∂ */}
        {selectedBook && (
          <View style={styles.selectionSummary}>
            <Text style={styles.summaryTitle}>
              {currentLanguage === 'hindi' ? '‡§Ü‡§™‡§ï‡§æ ‡§ö‡§Ø‡§®:' : 'Your Selection:'}
            </Text>
            <Text style={styles.summaryText}>
              <Text style={styles.summaryLabel}>
                {currentLanguage === 'hindi' ? '‡§™‡•Å‡§∏‡•ç‡§§‡§ï: ' : 'Book: '}
              </Text>
              {selectedBook.name}
            </Text>
            
            {selectedSubject && (
              <Text style={styles.summaryText}>
                <Text style={styles.summaryLabel}>
                  {currentLanguage === 'hindi' ? '‡§µ‡§ø‡§∑‡§Ø: ' : 'Subject: '}
                </Text>
                {selectedSubject.name}
              </Text>
            )}
            
            {selectedTopic ? (
              <Text style={styles.summaryText}>
                <Text style={styles.summaryLabel}>
                  {currentLanguage === 'hindi' ? '‡§ü‡•â‡§™‡§ø‡§ï: ' : 'Topic: '}
                </Text>
                {selectedTopic.name}
              </Text>
            ) : selectedSubject && (
              <Text style={styles.summaryText}>
                <Text style={styles.summaryLabel}>
                  {currentLanguage === 'hindi' ? '‡§ü‡•â‡§™‡§ø‡§ï: ' : 'Topic: '}
                </Text>
                {currentLanguage === 'hindi' ? '‡§∏‡§≠‡•Ä ‡§ü‡•â‡§™‡§ø‡§ï‡•ç‡§∏' : 'All Topics'}
              </Text>
            )}
          </View>
        )}
      </ScrollView>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#FDF0D5',
  },
  header: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    backgroundColor: '#003049',
    paddingHorizontal: 20,
    paddingVertical: 15,
  },
  headerTitle: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#FFFFFF',
  },
  langButton: {
    backgroundColor: 'rgba(255,255,255,0.2)',
    paddingHorizontal: 12,
    paddingVertical: 6,
    borderRadius: 20,
  },
  langButtonText: {
    color: '#FFFFFF',
    fontWeight: 'bold',
  },
  scrollView: {
    padding: 16,
  },
  card: {
    backgroundColor: '#FFFFFF',
    borderRadius: 12,
    padding: 16,
    marginBottom: 16,
    elevation: 2,
  },
  disabledCard: {
    opacity: 0.7,
  },
  cardTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#003049',
    marginBottom: 16,
  },
  bookList: {
    paddingBottom: 8,
  },
  bookItem: {
    width: 120,
    height: 120,
    borderRadius: 12,
    marginRight: 12,
    padding: 12,
    alignItems: 'center',
    justifyContent: 'center',
  },
  selectedItem: {
    borderWidth: 3,
    borderColor: '#FFFFFF',
  },
  bookItemIcon: {
    fontSize: 32,
    marginBottom: 8,
    color: '#FFFFFF',
  },
  bookItemText: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#FFFFFF',
    textAlign: 'center',
  },
  subjectList: {
    paddingBottom: 8,
  },
  subjectItem: {
    width: 110,
    height: 110,
    backgroundColor: '#F0F0F0',
    borderRadius: 12,
    marginRight: 12,
    padding: 12,
    alignItems: 'center',
    justifyContent: 'center',
  },
  selectedSubjectItem: {
    backgroundColor: '#E6F2FF',
    borderWidth: 2,
    borderColor: '#003049',
  },
  subjectItemIcon: {
    fontSize: 28,
    marginBottom: 8,
  },
  subjectItemText: {
    fontSize: 14,
    fontWeight: '500',
    textAlign: 'center',
  },
  allTopicsButton: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#F0F0F0',
    borderRadius: 12,
    padding: 12,
    marginBottom: 16,
  },
  allTopicsIcon: {
    fontSize: 24,
    marginRight: 8,
  },
  allTopicsText: {
    fontSize: 16,
    fontWeight: '500',
    color: '#003049',
  },
  topicList: {
    paddingBottom: 8,
  },
  topicItem: {
    width: 100,
    height: 100,
    backgroundColor: '#F0F0F0',
    borderRadius: 12,
    marginRight: 12,
    padding: 12,
    alignItems: 'center',
    justifyContent: 'center',
  },
  selectedTopicItem: {
    backgroundColor: '#E6F2FF',
    borderWidth: 2,
    borderColor: '#003049',
  },
  topicItemIcon: {
    fontSize: 24,
    marginBottom: 8,
  },
  topicItemText: {
    fontSize: 14,
    fontWeight: '500',
    textAlign: 'center',
  },
  emptyMessage: {
    fontSize: 14,
    color: '#999999',
    fontStyle: 'italic',
    textAlign: 'center',
    padding: 16,
  },
  studyModeContainer: {
    flexDirection: 'row',
    justifyContent: 'space-around',
    paddingVertical: 16,
  },
  studyModeButton: {
    width: 120,
    height: 120,
    backgroundColor: '#003049',
    borderRadius: 12,
    alignItems: 'center',
    justifyContent: 'center',
    padding: 12,
  },
  studyModeIcon: {
    fontSize: 32,
    marginBottom: 8,
    color: '#FFFFFF',
  },
  studyModeText: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#FFFFFF',
    textAlign: 'center',
  },
  miscCard: {
    backgroundColor: '#FFFFFF',
    borderRadius: 12,
    padding: 16,
    marginBottom: 16,
    elevation: 2,
    borderLeftWidth: 4,
    borderLeftColor: '#669BBC',
  },
  miscCardTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#003049',
    marginBottom: 16,
  },
  miscButton: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#F0F0F0',
    borderRadius: 12,
    padding: 16,
    marginBottom: 8,
  },
  miscButtonIcon: {
    fontSize: 24,
    marginRight: 8,
  },
  miscButtonText: {
    fontSize: 18,
    color: '#003049',
    fontWeight: 'bold',
  },
  miscDescription: {
    fontSize: 12,
    color: '#999999',
    textAlign: 'center',
  },
  selectionSummary: {
    backgroundColor: '#FFFFFF',
    borderRadius: 12,
    padding: 16,
    marginBottom: 16,
    elevation: 2,
    borderLeftWidth: 4,
    borderLeftColor: '#C1121F',
  },
  summaryTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#003049',
    marginBottom: 8,
  },
  summaryText: {
    fontSize: 14,
    color: '#333333',
    marginBottom: 4,
  },
  summaryLabel: {
    fontWeight: 'bold',
    color: '#003049',
  },
});

export default HomeScreen;