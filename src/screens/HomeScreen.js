import React, { useState } from 'react';
import {
  View,
  Text,
  StyleSheet,
  ScrollView,
  TouchableOpacity,
  StatusBar,
  SafeAreaView,
  FlatList,
} from 'react-native';

/**
 * HomeScreen - StudyBuddy рдРрдк рдХрд╛ рдореБрдЦреНрдп рд╕реНрдХреНрд░реАрди
 * @param {Object} navigation - рдиреЗрд╡рд┐рдЧреЗрд╢рди рдкреНрд░реЙрдк рдЬреЛ рд╕реНрдХреНрд░реАрдиреНрд╕ рдХреЗ рдмреАрдЪ рдиреЗрд╡рд┐рдЧреЗрдЯ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИ
 */
const HomeScreen = ({ navigation }) => {
  // рдбреЗрдореЛ рд╕реНрдЯреЗрдЯ
  const [selectedBook, setSelectedBook] = useState(null);
  const [selectedTopic, setSelectedTopic] = useState(null);
  const [currentLanguage, setCurrentLanguage] = useState('hindi'); // 'hindi' or 'english'
  
  // рдбреЗрдореЛ рдбреЗрдЯрд╛ - рдмрд╛рдж рдореЗрдВ API рдпрд╛ Redux рд╕реЗ рдЖрдПрдЧрд╛
  const bookList = [
    { id: 'book1', name: 'рд╕рд╛рдорд╛рдиреНрдп рдЬреНрдЮрд╛рди', color: '#FE7743' },
    { id: 'book2', name: 'рднрд╛рд░рддреАрдп рдЗрддрд┐рд╣рд╛рд╕', color: '#3498DB' },
    { id: 'book3', name: 'рднреВрдЧреЛрд▓', color: '#5B8C5A' },
    { id: 'book4', name: 'рд╡рд┐рдЬреНрдЮрд╛рди', color: '#9B59B6' },
  ];
  
  const topicList = [
    { id: 'topic1', name: 'рдЗрддрд┐рд╣рд╛рд╕', icon: 'ЁЯУЬ' },
    { id: 'topic2', name: 'рднреВрдЧреЛрд▓', icon: 'ЁЯМН' },
    { id: 'topic3', name: 'рд░рд╛рдЬрдиреАрддрд┐', icon: 'тЪЦя╕П' },
    { id: 'topic4', name: 'рд╡рд┐рдЬреНрдЮрд╛рди', icon: 'ЁЯФм' },
    { id: 'topic5', name: 'рд╕рд╛рдорд╛рдиреНрдп рдЬреНрдЮрд╛рди', icon: 'ЁЯТб' },
  ];
  
  // рднрд╛рд╖рд╛ рдЯреЙрдЧрд▓ рд╣реИрдВрдбрд▓рд░
  const toggleLanguage = () => {
    setCurrentLanguage(currentLanguage === 'hindi' ? 'english' : 'hindi');
  };

  // рдкреБрд╕реНрддрдХ рдЪрдпрди рд╣реИрдВрдбрд▓рд░
  const handleSelectBook = (book) => {
    setSelectedBook(book);
    setSelectedTopic(null);
  };
  
  // рдЯреЙрдкрд┐рдХ рдЪрдпрди рд╣реИрдВрдбрд▓рд░
  const handleSelectTopic = (topic) => {
    setSelectedTopic(topic);
  };
  
  // рдиреЗрд╡рд┐рдЧреЗрд╢рди рд╣реИрдВрдбрд▓рд░реНрд╕
  const navigateToQuiz = () => {
    // рдбреАрдмрдЧ рдЯреЗрд╕реНрдЯ рдХреЗ рд▓рд┐рдП - рдХрдВрд╕реЛрд▓ рд▓реЙрдЧ
    console.log("Quiz screen рдкрд░ рдиреЗрд╡рд┐рдЧреЗрдЯ рдХрд░ рд░рд╣реЗ рд╣реИрдВ...");
    console.log("Selected Book:", selectedBook?.id);
    console.log("Selected Topic:", selectedTopic?.id);
    
    if (selectedBook && selectedTopic) {
      // рдкреИрд░рд╛рдореАрдЯрд░реНрд╕ рдХреЛ рд╕реНрдкрд╖реНрдЯ рд░реВрдк рд╕реЗ рдкрд╛рд╕ рдХрд░реЗрдВ
      navigation.navigate('Quiz', {
        bookId: selectedBook.id,
        topicId: selectedTopic.id,
      });
    } else {
      // рдЕрдЧрд░ рдмреБрдХ рдпрд╛ рдЯреЙрдкрд┐рдХ рдирд╣реАрдВ рдЪреБрдиреЗ рдЧрдП рд╣реИрдВ рддреЛ рдЕрд▓рд░реНрдЯ рджрд┐рдЦрд╛рдП
      alert('рдХреГрдкрдпрд╛ рдкрд╣рд▓реЗ рдкреБрд╕реНрддрдХ рдФрд░ рд╡рд┐рд╖рдп рдЪреБрдиреЗрдВ');
    }
  };
  
  const navigateToOneliner = () => {
    if (selectedBook && selectedTopic) {
      navigation.navigate('Oneliner', {
        bookId: selectedBook.id,
        topicId: selectedTopic.id,
      });
    } else {
      // рдЕрдЧрд░ рдмреБрдХ рдпрд╛ рдЯреЙрдкрд┐рдХ рдирд╣реАрдВ рдЪреБрдиреЗ рдЧрдП рд╣реИрдВ рддреЛ рдЕрд▓рд░реНрдЯ рджрд┐рдЦрд╛рдП
      alert('рдХреГрдкрдпрд╛ рдкрд╣рд▓реЗ рдкреБрд╕реНрддрдХ рдФрд░ рд╡рд┐рд╖рдп рдЪреБрдиреЗрдВ');
    }
  };
  
  const navigateToMiscQuestions = () => {
    alert('рдорд┐рд╢реНрд░рд┐рдд рдкреНрд░рд╢реНрди рд╕реНрдХреНрд░реАрди рдкрд░ рдЬрд╛ рд░рд╣реЗ рд╣реИрдВ');
    navigation.navigate('MiscQuestions');
  };
  
  // рдкреБрд╕реНрддрдХ рдХрд╛рд░реНрдб рд░реЗрдВрдбрд░
  const renderBookItem = ({ item }) => (
    <TouchableOpacity
      style={[
        styles.bookCard,
        { backgroundColor: item.color },
        selectedBook?.id === item.id && styles.selectedBookCard
      ]}
      onPress={() => handleSelectBook(item)}
      activeOpacity={0.8}
    >
      <Text style={styles.bookCardText}>{item.name}</Text>
    </TouchableOpacity>
  );

  return (
    <SafeAreaView style={styles.container}>
      <StatusBar backgroundColor="#FE7743" barStyle="light-content" />
      
      {/* рд╣реЗрдбрд░ */}
      <View style={styles.header}>
        <Text style={styles.headerTitle}>StudyBuddy</Text>
        <TouchableOpacity style={styles.langButton} onPress={toggleLanguage}>
          <Text style={styles.langButtonText}>
            {currentLanguage === 'hindi' ? 'EN' : 'рд╣рд┐рдВ'}
          </Text>
        </TouchableOpacity>
      </View>
      
      <ScrollView style={styles.scrollView} showsVerticalScrollIndicator={false}>
        {/* рд╕реНрд╡рд╛рдЧрдд рд╕рдВрджреЗрд╢ */}
        <View style={styles.welcome}>
          <Text style={styles.welcomeTitle}>
            {currentLanguage === 'hindi' ? 'рдирдорд╕реНрддреЗ!' : 'Hello!'}
          </Text>
          <Text style={styles.welcomeText}>
            {currentLanguage === 'hindi' 
              ? 'рдЖрдЬ рдЖрдк рдХреНрдпрд╛ рд╕реАрдЦрдирд╛ рдЪрд╛рд╣рддреЗ рд╣реИрдВ?' 
              : 'What would you like to learn today?'}
          </Text>
        </View>
        
        {/* рдкреБрд╕реНрддрдХ рдЪреБрдиреЗрдВ */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>
            {currentLanguage === 'hindi' ? 'рдкреБрд╕реНрддрдХ рдЪреБрдиреЗрдВ' : 'Select Book'}
          </Text>
          
          <FlatList
            data={bookList}
            renderItem={renderBookItem}
            keyExtractor={item => item.id}
            horizontal
            showsHorizontalScrollIndicator={false}
            contentContainerStyle={styles.bookList}
          />
        </View>
        
        {/* рдЯреЙрдкрд┐рдХ рдЪреБрдиреЗрдВ - рдХреЗрд╡рд▓ рддрднреА рджрд┐рдЦрд╛рдПрдВ рдЬрдм рдкреБрд╕реНрддрдХ рдЪреБрдиреА рдЧрдИ рд╣реЛ */}
        {selectedBook && (
          <View style={styles.section}>
            <Text style={styles.sectionTitle}>
              {currentLanguage === 'hindi' ? 'рд╡рд┐рд╖рдп рдЪреБрдиреЗрдВ' : 'Select Topic'}
            </Text>
            
            <View style={styles.topicList}>
              {topicList.map(topic => (
                <TouchableOpacity
                  key={topic.id}
                  style={[
                    styles.topicButton,
                    selectedTopic?.id === topic.id && styles.selectedTopicButton
                  ]}
                  onPress={() => handleSelectTopic(topic)}
                >
                  <Text style={styles.topicIcon}>{topic.icon}</Text>
                  <Text 
                    style={[
                      styles.topicText,
                      selectedTopic?.id === topic.id && styles.selectedTopicText
                    ]}
                  >
                    {topic.name}
                  </Text>
                </TouchableOpacity>
              ))}
            </View>
          </View>
        )}
        
        {/* рдЕрдзреНрдпрдпрди рдореЛрдб */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>
            {currentLanguage === 'hindi' ? 'рдЕрдзреНрдпрдпрди рдореЛрдб' : 'Study Mode'}
          </Text>
          
          {/* рдХреНрд╡рд┐рдЬрд╝ рдореЛрдб */}
          <TouchableOpacity
            style={[
              styles.modeCard,
              styles.quizCard,
              (!selectedBook || !selectedTopic) && styles.disabledCard
            ]}
            onPress={navigateToQuiz}
            disabled={!selectedBook || !selectedTopic}
          >
            <View style={styles.modeCardIcon}>
              <Text style={styles.modeCardIconText}>ЁЯУЭ</Text>
            </View>
            <View style={styles.modeCardContent}>
              <Text style={styles.modeCardTitle}>
                {currentLanguage === 'hindi' ? 'рдХреНрд╡рд┐рдЬрд╝' : 'Quiz'}
              </Text>
              <Text style={styles.modeCardDesc}>
                {currentLanguage === 'hindi' 
                  ? 'рдЗрдВрдЯрд░реИрдХреНрдЯрд┐рд╡ рдкреНрд░рд╢реНрдиреЛрддреНрддрд░реА рдХрд╛ рдЕрднреНрдпрд╛рд╕ рдХрд░реЗрдВ' 
                  : 'Practice with interactive quizzes'}
              </Text>
            </View>
            <Text style={styles.modeCardArrow}>тЖТ</Text>
          </TouchableOpacity>
          
          {/* рд╡рдирд▓рд╛рдЗрдирд░ рдореЛрдб */}
          <TouchableOpacity
            style={[
              styles.modeCard,
              styles.onelinerCard,
              (!selectedBook || !selectedTopic) && styles.disabledCard
            ]}
            onPress={navigateToOneliner}
            disabled={!selectedBook || !selectedTopic}
          >
            <View style={styles.modeCardIcon}>
              <Text style={styles.modeCardIconText}>ЁЯУЪ</Text>
            </View>
            <View style={styles.modeCardContent}>
              <Text style={styles.modeCardTitle}>
                {currentLanguage === 'hindi' ? 'рд╡рдирд▓рд╛рдЗрдирд░' : 'Oneliner'}
              </Text>
              <Text style={styles.modeCardDesc}>
                {currentLanguage === 'hindi' 
                  ? 'рдПрдХ-рдкрдВрдХреНрддрд┐ рд╕рд╛рд░ рдкрдврд╝реЗрдВ рдФрд░ рдпрд╛рдж рдХрд░реЗрдВ' 
                  : 'Read and memorize one-line summaries'}
              </Text>
            </View>
            <Text style={styles.modeCardArrow}>тЖТ</Text>
          </TouchableOpacity>
          
          {/* рдорд┐рд╢реНрд░рд┐рдд рдкреНрд░рд╢реНрди рдореЛрдб */}
          <TouchableOpacity
            style={[styles.modeCard, styles.miscCard]}
            onPress={navigateToMiscQuestions}
          >
            <View style={styles.modeCardIcon}>
              <Text style={styles.modeCardIconText}>ЁЯФД</Text>
            </View>
            <View style={styles.modeCardContent}>
              <Text style={styles.modeCardTitle}>
                {currentLanguage === 'hindi' ? 'рдорд┐рд╢реНрд░рд┐рдд рдкреНрд░рд╢реНрди' : 'Mixed Questions'}
              </Text>
              <Text style={styles.modeCardDesc}>
                {currentLanguage === 'hindi' 
                  ? 'рд╕рднреА рдкреНрд░рд╢реНрдиреЛрдВ рдХрд╛ рд░реИрдВрдбрдо рдПрдХреНрд╕реЗрд╕' 
                  : 'Random access to all questions'}
              </Text>
            </View>
            <Text style={styles.modeCardArrow}>тЖТ</Text>
          </TouchableOpacity>
        </View>
        
        {/* рдкреНрд░рдЧрддрд┐ */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>
            {currentLanguage === 'hindi' ? 'рдЖрдкрдХреА рдкреНрд░рдЧрддрд┐' : 'Your Progress'}
          </Text>
          
          <View style={styles.progressCard}>
            <View style={styles.progressHeader}>
              <Text style={styles.progressTitle}>
                {currentLanguage === 'hindi' ? 'рд╕рдордЧреНрд░ рдкреНрд░рдЧрддрд┐' : 'Overall Progress'}
              </Text>
              <Text style={styles.progressPercent}>35%</Text>
            </View>
            
            <View style={styles.progressBarContainer}>
              <View style={[styles.progressBar, { width: '35%' }]} />
            </View>
            
            <View style={styles.statsContainer}>
              <View style={styles.statItem}>
                <Text style={styles.statNumber}>98</Text>
                <Text style={styles.statLabel}>
                  {currentLanguage === 'hindi' ? 'рдкреНрд░рд╢реНрди рд╣рд▓ рдХрд┐рдП' : 'Questions Solved'}
                </Text>
              </View>
              <View style={styles.statItem}>
                <Text style={styles.statNumber}>8</Text>
                <Text style={styles.statLabel}>
                  {currentLanguage === 'hindi' ? 'рд╡рд┐рд╖рдп рдХрд╡рд░ рдХрд┐рдП' : 'Topics Covered'}
                </Text>
              </View>
              <View style={styles.statItem}>
                <Text style={styles.statNumber}>7.2</Text>
                <Text style={styles.statLabel}>
                  {currentLanguage === 'hindi' ? 'рдФрд╕рдд рд╕реНрдХреЛрд░' : 'Avg. Score'}
                </Text>
              </View>
            </View>
          </View>
        </View>
        
        {/* рдирдИ рдкреБрд╕реНрддрдХ рд╕реБрдЭрд╛рд╡ */}
        <View style={styles.suggestContainer}>
          <TouchableOpacity style={styles.suggestButton}>
            <Text style={styles.suggestIcon}>ЁЯУЪ</Text>
            <Text style={styles.suggestText}>
              {currentLanguage === 'hindi' ? 'рдирдИ рдкреБрд╕реНрддрдХ рд╕реБрдЭрд╛рдПрдВ' : 'Suggest a New Book'}
            </Text>
          </TouchableOpacity>
        </View>
        
        {/* рдлреБрдЯрд░ */}
        <View style={styles.footer}>
          <Text style={styles.footerText}>
            StudyBuddy ┬й {new Date().getFullYear()}
          </Text>
        </View>
      </ScrollView>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#EFEEEA',
  },
  header: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    backgroundColor: '#FE7743',
    paddingHorizontal: 20,
    paddingVertical: 15,
  },
  headerTitle: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#FFFFFF',
  },
  langButton: {
    backgroundColor: 'rgba(255,255,255,0.2)',
    paddingHorizontal: 12,
    paddingVertical: 6,
    borderRadius: 20,
  },
  langButtonText: {
    color: '#FFFFFF',
    fontWeight: 'bold',
  },
  scrollView: {
    flex: 1,
  },
  welcome: {
    padding: 20,
    paddingTop: 25,
  },
  welcomeTitle: {
    fontSize: 26,
    fontWeight: 'bold',
    color: '#273F4F',
    marginBottom: 5,
  },
  welcomeText: {
    fontSize: 16,
    color: '#666666',
  },
  section: {
    marginBottom: 25,
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#273F4F',
    marginBottom: 15,
    paddingHorizontal: 20,
  },
  bookList: {
    paddingLeft: 20,
    paddingRight: 10,
  },
  bookCard: {
    width: 150,
    height: 80,
    borderRadius: 12,
    marginRight: 12,
    padding: 15,
    justifyContent: 'center',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2,
  },
  selectedBookCard: {
    borderWidth: 3,
    borderColor: '#FFFFFF',
  },
  bookCardText: {
    color: '#FFFFFF',
    fontSize: 16,
    fontWeight: 'bold',
  },
  topicList: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    paddingHorizontal: 15,
  },
  topicButton: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#FFFFFF',
    paddingHorizontal: 15,
    paddingVertical: 10,
    borderRadius: 20,
    marginHorizontal: 5,
    marginBottom: 10,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.1,
    shadowRadius: 2,
    elevation: 1,
  },
  selectedTopicButton: {
    backgroundColor: '#FE7743',
  },
  topicIcon: {
    fontSize: 16,
    marginRight: 6,
  },
  topicText: {
    color: '#273F4F',
    fontSize: 14,
  },
  selectedTopicText: {
    color: '#FFFFFF',
    fontWeight: 'bold',
  },
  modeCard: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#FFFFFF',
    marginHorizontal: 20,
    marginBottom: 12,
    borderRadius: 12,
    padding: 15,
    borderLeftWidth: 5,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 3,
    elevation: 2,
  },
  quizCard: {
    borderLeftColor: '#FE7743',
  },
  onelinerCard: {
    borderLeftColor: '#273F4F',
  },
  miscCard: {
    borderLeftColor: '#5B8C5A',
  },
  disabledCard: {
    opacity: 0.5,
  },
  modeCardIcon: {
    width: 40,
    height: 40,
    borderRadius: 20,
    backgroundColor: 'rgba(254, 119, 67, 0.1)',
    justifyContent: 'center',
    alignItems: 'center',
    marginRight: 15,
  },
  modeCardIconText: {
    fontSize: 20,
  },
  modeCardContent: {
    flex: 1,
  },
  modeCardTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#273F4F',
    marginBottom: 4,
  },
  modeCardDesc: {
    fontSize: 12,
    color: '#666666',
  },
  modeCardArrow: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#FE7743',
  },
  progressCard: {
    backgroundColor: '#FFFFFF',
    marginHorizontal: 20,
    borderRadius: 12,
    padding: 15,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 3,
    elevation: 2,
  },
  progressHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 10,
  },
  progressTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#273F4F',
  },
  progressPercent: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#FE7743',
  },
  progressBarContainer: {
    height: 8,
    backgroundColor: '#F0F0F0',
    borderRadius: 4,
    marginBottom: 15,
  },
  progressBar: {
    height: '100%',
    backgroundColor: '#FE7743',
    borderRadius: 4,
  },
  statsContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    paddingTop: 10,
    borderTopWidth: 1,
    borderTopColor: '#F0F0F0',
  },
  statItem: {
    flex: 1,
    alignItems: 'center',
  },
  statNumber: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#273F4F',
    marginBottom: 4,
  },
  statLabel: {
    fontSize: 12,
    color: '#666666',
    textAlign: 'center',
  },
  suggestContainer: {
    paddingHorizontal: 20,
    marginBottom: 30,
  },
  suggestButton: {
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center',
    padding: 15,
    backgroundColor: '#FFFFFF',
    borderRadius: 12,
    borderWidth: 1,
    borderColor: '#273F4F',
    borderStyle: 'dashed',
  },
  suggestIcon: {
    fontSize: 16,
    marginRight: 8,
  },
  suggestText: {
    color: '#273F4F',
    fontWeight: '500',
  },
  footer: {
    alignItems: 'center',
    marginBottom: 20,
  },
  footerText: {
    fontSize: 12,
    color: '#999999',
  },
});

export default HomeScreen;