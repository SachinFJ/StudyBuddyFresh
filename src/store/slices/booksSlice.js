import { createSlice } from '@reduxjs/toolkit';

// рдЗрдирд┐рд╢рд┐рдпрд▓ рд╕реНрдЯреЗрдЯ
const initialState = {
  allBooks: [
    { id: 'book1', name: 'рд╕рд╛рдорд╛рдиреНрдп рдЬреНрдЮрд╛рди', nameEn: 'General Knowledge', color: '#003049', icon: 'ЁЯза' },
    { id: 'book2', name: 'рднрд╛рд░рддреАрдп рдЗрддрд┐рд╣рд╛рд╕', nameEn: 'Indian History', color: '#C1121F', icon: 'ЁЯПЫя╕П' },
    { id: 'book3', name: 'рднреВрдЧреЛрд▓', nameEn: 'Geography', color: '#669BBC', icon: 'ЁЯМН' },
    { id: 'book4', name: 'рд╡рд┐рдЬреНрдЮрд╛рди', nameEn: 'Science', color: '#780000', icon: 'ЁЯФм' },
  ],
  selectedBook: null,
  filteredBooks: []
};

const booksSlice = createSlice({
  name: 'books',
  initialState,
  reducers: {
    // рдкреБрд╕реНрддрдХ рдХрд╛ рдЪрдпрди рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдПрдХреНрд╢рди
    selectBook: (state, action) => {
      state.selectedBook = action.payload;
    },
    // рдкреБрд╕реНрддрдХреЛрдВ рдХреЛ рдлрд╝рд┐рд▓реНрдЯрд░ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдПрдХреНрд╢рди
    filterBooks: (state, action) => {
      const query = action.payload.toLowerCase();
      if (!query) {
        state.filteredBooks = [];
      } else {
        state.filteredBooks = state.allBooks.filter(book => 
          book.name.toLowerCase().includes(query) || 
          (book.nameEn && book.nameEn.toLowerCase().includes(query))
        );
      }
    },
    // рдкреБрд╕реНрддрдХ рдЪрдпрди рд░реАрд╕реЗрдЯ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдПрдХреНрд╢рди
    resetBookSelection: (state) => {
      state.selectedBook = null;
    }
  }
});

// рдПрдХреНрд╢рдиреНрд╕ рдПрдХреНрд╕рдкреЛрд░реНрдЯ рдХрд░реЗрдВ
export const { selectBook, filterBooks, resetBookSelection } = booksSlice.actions;

// рд░рд┐рдбреНрдпреВрд╕рд░ рдПрдХреНрд╕рдкреЛрд░реНрдЯ рдХрд░реЗрдВ
export default booksSlice.reducer;